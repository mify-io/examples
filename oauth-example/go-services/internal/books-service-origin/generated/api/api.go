// THIS FILE IS AUTOGENERATED, DO NOT EDIT
// Generated by mify via OpenAPI Generator

// vim: set ft=go:
package openapi

import (
	"example.com/namespace/oauth-example/go-services/internal/books-service-origin/generated/core"
	"net/http"
)

// hack to keep imports used if there are no routes in api
var _ *http.Request
var _ *core.MifyRequestContext

// BooksApiRouter defines the required methods for binding the api requests to a responses for the BooksApi
// The BooksApiRouter implementation should parse necessary information from the http request,
// pass the data to a BooksApiServicer to perform the required actions, then write the service results to the http response.
type BooksApiRouter interface {
	BooksGet(http.ResponseWriter, *http.Request)
	BooksPut(http.ResponseWriter, *http.Request)
}

// BooksIdApiRouter defines the required methods for binding the api requests to a responses for the BooksIdApi
// The BooksIdApiRouter implementation should parse necessary information from the http request,
// pass the data to a BooksIdApiServicer to perform the required actions, then write the service results to the http response.
type BooksIdApiRouter interface {
	BooksIdGet(http.ResponseWriter, *http.Request)
}

// BooksApiServicer defines the api actions for the BooksApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BooksApiServicer interface {
	BooksGet(*core.MifyRequestContext) (ServiceResponse, error)
	BooksPut(*core.MifyRequestContext, CreateBookRequest) (ServiceResponse, error)
}

// BooksIdApiServicer defines the api actions for the BooksIdApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BooksIdApiServicer interface {
	BooksIdGet(*core.MifyRequestContext, int64) (ServiceResponse, error)
}
